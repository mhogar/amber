// Code generated by mockery v1.1.2. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// Renderer is an autogenerated mock type for the Renderer type
type Renderer struct {
	mock.Mock
}

// RenderView provides a mock function with given fields: req, data, templates
func (_m *Renderer) RenderView(req *http.Request, data interface{}, templates ...string) []byte {
	_va := make([]interface{}, len(templates))
	for _i := range templates {
		_va[_i] = templates[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, req, data)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(*http.Request, interface{}, ...string) []byte); ok {
		r0 = rf(req, data, templates...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}
