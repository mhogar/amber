name: CI
on: 
  push:
    branches: [master]
  pull_request:
env:
  CFG_ENV: test
  FIRESTORE_EMULATOR_HOST: localhost:3000
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    # Get values for cache paths to be used in later steps
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - uses: actions/checkout@v2

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Get values for cache paths to be used in later steps
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - uses: actions/checkout@v2

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    
    - name: Run Unit Tests
      run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./controllers ./controllers/password_helpers ./data ./models ./router ./router/handlers ./server ./tools/admin_creator/runner ./tools/migration_runner/runner

    - name: Convert Coverage to LCOV
      uses: jandelgado/gcov2lcov-action@v1.0.8

    - name: Send to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: coverage.lcov

  integration-postgres:
    name: Integration and E2E Tests (Postgres)
    runs-on: ubuntu-latest
    needs: build
    env:
      CFG_DATA_ADAPTER: database

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    # Get values for cache paths to be used in later steps
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - uses: actions/checkout@v2

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Create Database
      run: go run data/database/sql_adapter/postgres/create_db/main.go -name=ci_test

    - name: Run Migrations
      run: go run tools/migration_runner/main.go -db=integration

    - name: Create Admin User
      run: go run tools/admin_creator/main.go -db=integration -username=admin -password=Admin123! -rank=10

    - name: Run Integration Tests
      run: go test ./testing/integration/ -v

    - name: Run End-to-End Tests
      run: go test ./testing/e2e/ -v

  integration-firestore:
    name: Integration and E2E Tests (Firestore)
    runs-on: ubuntu-latest
    needs: build
    env:
      CFG_DATA_ADAPTER: firestore

    services:
      firestore-emulator:
        image: mtlynch/firestore-emulator:latest
        env:
          FIRESTORE_PROJECT_ID: emulator-project-id
          PORT: 3000
        ports:
          - 3000:3000

    steps:
    # Get values for cache paths to be used in later steps
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - uses: actions/checkout@v2

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Create Admin User
      run: go run tools/admin_creator/main.go -db=integration -username=admin -password=Admin123! -rank=10

    - name: Run Integration Tests
      run: go test ./testing/integration/ -v

    - name: Run End-to-End Tests
      run: go test ./testing/e2e/ -v
